{"Structs/Causality/State.html#/s:9CausalityAAV5StateV4nameSSvp":{"name":"name","abstract":"<p><code>name</code> provides some context on the purpose of the event.  It does not have to be unique.  However, events of the same &ldquo;name&rdquo; will not be called even if they have the same message type.</p>","parent_name":"State"},"Structs/Causality/Event.html#/s:9CausalityAAV5EventV4nameSSvp":{"name":"name","abstract":"<p><code>name</code> provides some context on the purpose of the event.  It does not have to be unique.  However, events of the same &ldquo;name&rdquo; will not be called even if they have the same message type.</p>","parent_name":"Event"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC4nameSSvp":{"name":"name","abstract":"<p>A name for the bus.</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC5queueSo012OS_dispatch_C0Cvp":{"name":"queue","abstract":"<p>Queue on which to execute publish/subscribe actions to ensure thread safety</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC4name5queueADSS_So012OS_dispatch_D0Ctcfc":{"name":"init(name:queue:)","abstract":"<p>Initialize a Causality Event Bus</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC7publish5event7messageyAB5EventVy_xG_xtlF":{"name":"publish(event:message:)","abstract":"<p>Publish an event to the bus.</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC7publish5eventyAB5EventVy_AB9NoMessageVG_tF":{"name":"publish(event:)","abstract":"<p>Publish an event with no message</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17EventSubscription_pAB0F0Vy_xG_So012OS_dispatch_D0CSgyAaH_p_xtctlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific event type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17EventSubscription_pAB0F0Vy_xG_So16NSOperationQueueCyAaH_p_xtctlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific event type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17EventSubscription_pAB0F0Vy_xG_So012OS_dispatch_D0CSgyxctlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to an event</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17EventSubscription_pAB0F0Vy_xG_So16NSOperationQueueCyxctlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to an event</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC11unsubscribeyyAA0A17EventSubscription_pF":{"name":"unsubscribe(_:)","abstract":"<p>Stop a particular subscription handler from listening to events anymore.</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC11unsubscribeyySayAA0A17EventSubscription_pGF":{"name":"unsubscribe(_:)","abstract":"<p>Unsubscribe an array of subscriptions</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC8hasStateySbAB0D0Vy_xGSQRzlF":{"name":"hasState(_:)","abstract":"<p>Determine if a state has an existing value</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC8getStateyxSgAB0D0Vy_xGSQRzlF":{"name":"getState(_:)","abstract":"<p>Get the last known value for a state</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC3set5state5valueyAB5StateVy_xG_xtSQRzlF":{"name":"set(state:value:)","abstract":"<p>Publish an event to the bus.</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17StateSubscription_pAB0F0Vy_xG_So012OS_dispatch_D0CSgyAaH_p_xtctSQRzlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific state type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17StateSubscription_pAB0F0Vy_xG_So16NSOperationQueueCyAaH_p_xtctSQRzlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific state type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17StateSubscription_pAB0F0Vy_xG_So012OS_dispatch_D0CSgyxctSQRzlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific state type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC9subscribe_5queue7handlerAA0A17StateSubscription_pAB0F0Vy_xG_So16NSOperationQueueCyxctSQRzlF":{"name":"subscribe(_:queue:handler:)","abstract":"<p>Add a subscriber to a specific state type</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC11unsubscribeyyAA0A17StateSubscription_pF":{"name":"unsubscribe(_:)","abstract":"<p>Stop a particular subscription handler from listening to state changes anymore.</p>","parent_name":"Bus"},"Structs/Causality/Bus.html#/s:9CausalityAAV3BusC11unsubscribeyySayAA0A17StateSubscription_pGF":{"name":"unsubscribe(_:)","abstract":"<p>Unsubscribe an array of subscriptions</p>","parent_name":"Bus"},"Structs/Causality/SubscriptionState.html#/s:9CausalityAAV17SubscriptionStateO6activeyA2DmF":{"name":"active","abstract":"<p>handler will be called when appropriate</p>","parent_name":"SubscriptionState"},"Structs/Causality/SubscriptionState.html#/s:9CausalityAAV17SubscriptionStateO18unsubscribePendingyA2DmF":{"name":"unsubscribePending","abstract":"<p>handler will no longer be called.  The subscription will be removed at the next opportunity.</p>","parent_name":"SubscriptionState"},"Structs/Causality.html#/s:9CausalityAAV11globalQueueSo17OS_dispatch_queueCvpZ":{"name":"globalQueue","abstract":"<p>The queue used by the default bus for thread-safety.  Also the default queue used for all buses (unless specified on initialization).</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV3busAB3BusCvpZ":{"name":"bus","abstract":"<p>A default/global bus</p>","parent_name":"Causality"},"Structs/Causality/SubscriptionState.html":{"name":"SubscriptionState","abstract":"<p>Subscriptions can be in the following states:</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV14SubscriptionIda":{"name":"SubscriptionId","abstract":"<p>Subscription identifier used by subscribers to be able to unsubscribe.","parent_name":"Causality"},"Structs/Causality/Bus.html":{"name":"Bus","abstract":"<p>A Bus for events to go from publishers to subscribers</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV17EventSubscriptiona":{"name":"EventSubscription","abstract":"<p>Subscription info for events.  Used to <code>unsubscribe()</code>.</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV7EventIda":{"name":"EventId","abstract":"<p>Underlying type for EventIds (do not rely on this always being a UUID)</p>","parent_name":"Causality"},"Structs/Causality/Event.html":{"name":"Event","abstract":"<p>Declare events to be used as endpoints for publish or subscribe calls.</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV7Messagea":{"name":"Message","abstract":"<p>Custom types used as messages should conform to <code>Message</code></p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV9NoMessageV":{"name":"NoMessage","abstract":"<p>A convenience message that can be included for events that have no associated data</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV13AnyStateValuea":{"name":"AnyStateValue","abstract":"<p>Type-erased StateValue</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV7StateIda":{"name":"StateId","abstract":"<p>Underlying type for StateIds (do not rely on this always being a UUID)</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV10StateValuea":{"name":"StateValue","abstract":"<p>Custom type for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Causality/State.html\">State</a></code> info</p>","parent_name":"Causality"},"Structs/Causality.html#/s:9CausalityAAV17StateSubscriptiona":{"name":"StateSubscription","abstract":"<p>Subscription info for states.  Used to <code>unsubscribe()</code>.</p>","parent_name":"Causality"},"Structs/Causality/State.html":{"name":"State","abstract":"<p>Declare states with typed values as labels to be used for <code>setState()</code> and <code>subscribe()</code> calls.</p>","parent_name":"Causality"},"Structs/Causality.html":{"name":"Causality","abstract":"<p>Causality is a very simple event bus for Swift.  Events may have associated data and are fully typed.  Causality also allows for monitoring State changes.</p>"},"Protocols/CausalityAnySubscription.html#/s:9Causality0A15AnySubscriptionP2id10Foundation4UUIDVvp":{"name":"id","abstract":"<p>A unique for the subscription</p>","parent_name":"CausalityAnySubscription"},"Protocols/CausalityAnySubscription.html#/s:9Causality0A15AnySubscriptionP17subscriptionStateA2AV0cE0Ovp":{"name":"subscriptionState","abstract":"<p>The current state of the subscription</p>","parent_name":"CausalityAnySubscription"},"Protocols/CausalityAnySubscription.html#/s:9Causality0A15AnySubscriptionP11unsubscribeyyF":{"name":"unsubscribe()","abstract":"<p>The handler for this subscription will no longer be called after an `unsubscribe()</p>","parent_name":"CausalityAnySubscription"},"Protocols/CausalityAnySubscription.html":{"name":"CausalityAnySubscription","abstract":"<p>All Subscriptions conform to this protocol</p>"},"Protocols.html#/s:9Causality0A17EventSubscriptionP":{"name":"CausalityEventSubscription","abstract":"<p>An event subscription.  Used to unsubscribe.</p>"},"Protocols.html#/s:9Causality0A17StateSubscriptionP":{"name":"CausalityStateSubscription","abstract":"<p>A state change subscription.  Used to unsubscribe.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}